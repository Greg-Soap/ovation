'use client'

import Image from 'next/image'
import { Textarea } from '@/components/ui/textarea'
import { Button } from '@/components/ui/button'
import { ReactElement, useState, ChangeEvent } from 'react'

export default function PublishPost() {
  const verifyIcon = (
    <svg
      viewBox="0 0 13 13"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-3 h-3"
    >
      <path
        d="M11.2814 5.87027L10.6014 5.08027C10.4714 4.93027 10.3664 4.65027 10.3664 4.45027V3.60027C10.3664 3.07027 9.93141 2.63527 9.4014 2.63527H8.55141C8.35641 2.63527 8.07141 2.53027 7.92141 2.40027L7.13141 1.72027C6.78641 1.42527 6.22141 1.42527 5.87141 1.72027L5.08641 2.40527C4.93641 2.53027 4.65141 2.63527 4.45641 2.63527H3.59141C3.06141 2.63527 2.62641 3.07027 2.62641 3.60027V4.45527C2.62641 4.65027 2.52141 4.93027 2.39641 5.08027L1.72141 5.87527C1.43141 6.22027 1.43141 6.78027 1.72141 7.12527L2.39641 7.92027C2.52141 8.07027 2.62641 8.35027 2.62641 8.54527V9.40027C2.62641 9.93027 3.06141 10.3653 3.59141 10.3653H4.45641C4.65141 10.3653 4.93641 10.4703 5.08641 10.6003L5.87641 11.2803C6.22141 11.5753 6.78641 11.5753 7.13641 11.2803L7.92641 10.6003C8.07641 10.4703 8.35641 10.3653 8.55641 10.3653H9.4064C9.93641 10.3653 10.3714 9.93027 10.3714 9.40027V8.55027C10.3714 8.35527 10.4764 8.07027 10.6064 7.92027L11.2864 7.13027C11.5764 6.78527 11.5764 6.21527 11.2814 5.87027ZM8.58141 5.55527L6.16641 7.97027C6.09641 8.04027 6.00141 8.08027 5.90141 8.08027C5.80141 8.08027 5.70641 8.04027 5.63641 7.97027L4.42641 6.76027C4.28141 6.61527 4.28141 6.37527 4.42641 6.23027C4.57141 6.08527 4.81141 6.08527 4.95641 6.23027L5.90141 7.17527L8.05141 5.02527C8.19641 4.88027 8.43641 4.88027 8.58141 5.02527C8.72641 5.17027 8.72641 5.41027 8.58141 5.55527Z"
        fill="#4865FC"
      />
    </svg>
  )

  const nftIcon = (
    <svg
      viewBox="0 0 15 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[15px] h-4 stroke-[#E6E6E6]"
    >
      <path
        d="M14.1654 9.33496H8.83203V14.6683H14.1654V9.33496ZM3.83203 1.33496L6.83203 6.66829H0.832031L3.83203 1.33496ZM11.4987 6.66829C12.2059 6.66829 12.8842 6.38734 13.3843 5.88725C13.8844 5.38715 14.1654 4.70887 14.1654 4.00163C14.1654 3.29438 13.8844 2.61611 13.3843 2.11601C12.8842 1.61591 12.2059 1.33496 11.4987 1.33496C10.7915 1.33496 10.1132 1.61591 9.61308 2.11601C9.11298 2.61611 8.83203 3.29438 8.83203 4.00163C8.83203 4.70887 9.11298 5.38715 9.61308 5.88725C10.1132 6.38734 10.7915 6.66829 11.4987 6.66829Z"
        stroke=""
        strokeWidth="1.33333"
        strokeLinejoin="round"
      />
      <path
        d="M0.832031 9.33398L6.16536 14.6673M6.16536 9.33398L0.832031 14.6673"
        stroke=""
        strokeWidth="1.33333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )

  const galleryIcon = (
    <svg
      viewBox="0 0 17 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="h-4 w-[17px]"
    >
      <path
        d="M10.4987 14.833H6.4987C4.72696 14.833 3.54198 14.4532 2.79357 13.7048C2.04515 12.9564 1.66536 11.7714 1.66536 9.99967V5.99967C1.66536 4.22794 2.04515 3.04296 2.79357 2.29454C3.54198 1.54613 4.72696 1.16634 6.4987 1.16634H10.4987C12.2704 1.16634 13.4554 1.54613 14.2038 2.29454C14.9522 3.04296 15.332 4.22794 15.332 5.99967V9.99967C15.332 11.7714 14.9522 12.9564 14.2038 13.7048C13.4554 14.4532 12.2704 14.833 10.4987 14.833ZM6.4987 1.49967C4.93851 1.49967 3.78158 1.77372 3.02716 2.52814C2.27274 3.28256 1.9987 4.43949 1.9987 5.99967V9.99967C1.9987 11.5599 2.27274 12.7168 3.02716 13.4712C3.78158 14.2256 4.93851 14.4997 6.4987 14.4997H10.4987C12.0589 14.4997 13.2158 14.2256 13.9702 13.4712C14.7246 12.7168 14.9987 11.5599 14.9987 9.99967V5.99967C14.9987 4.43949 14.7246 3.28256 13.9702 2.52814C13.2158 1.77372 12.0589 1.49967 10.4987 1.49967H6.4987Z"
        fill="#E6E6E6"
        stroke="#E6E6E6"
        stroke-width="0.666667"
      />
      <path
        d="M6.5013 6.83333C5.67206 6.83333 5.0013 6.16257 5.0013 5.33333C5.0013 4.50409 5.67206 3.83333 6.5013 3.83333C7.33054 3.83333 8.0013 4.50409 8.0013 5.33333C8.0013 6.16257 7.33054 6.83333 6.5013 6.83333ZM6.5013 4.16667C5.85721 4.16667 5.33464 4.68924 5.33464 5.33333C5.33464 5.97743 5.85721 6.5 6.5013 6.5C7.1454 6.5 7.66797 5.97743 7.66797 5.33333C7.66797 4.68924 7.1454 4.16667 6.5013 4.16667Z"
        fill="#E6E6E6"
        stroke="#E6E6E6"
        stroke-width="0.666667"
      />
      <path
        d="M2.2792 13.133C2.1192 13.133 1.9592 13.053 1.86586 12.913C1.71253 12.6864 1.77253 12.373 2.00586 12.2197L5.29253 10.013C6.01253 9.52638 7.00586 9.58638 7.6592 10.1397L7.8792 10.333C8.21253 10.6197 8.7792 10.6197 9.10586 10.333L11.8792 7.95305C12.5859 7.34638 13.6992 7.34638 14.4125 7.95305L15.4992 8.88638C15.7059 9.06638 15.7325 9.37971 15.5525 9.59305C15.3725 9.79971 15.0592 9.82638 14.8459 9.64638L13.7592 8.71305C13.4259 8.42638 12.8592 8.42638 12.5259 8.71305L9.75253 11.093C9.04586 11.6997 7.93253 11.6997 7.2192 11.093L6.9992 10.8997C6.69253 10.6397 6.18586 10.613 5.84586 10.8464L2.5592 13.053C2.47253 13.1064 2.37253 13.133 2.2792 13.133Z"
        fill="#E6E6E6"
      />
    </svg>
  )

  const pollIcon = (
    <svg
      viewBox="0 0 14 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[14px] h-[14px]"
    >
      <path
        d="M8.8347 2.16841V2.16865V11.834C8.8347 12.0311 8.79587 12.2264 8.72042 12.4085C8.64497 12.5907 8.53438 12.7562 8.39497 12.8956C8.25556 13.035 8.09005 13.1456 7.9079 13.221L8.03546 13.529L7.9079 13.221C7.72575 13.2965 7.53052 13.3353 7.33336 13.3353C7.13621 13.3353 6.94098 13.2965 6.75883 13.221C6.57668 13.1456 6.41117 13.035 6.27176 12.8956C6.13235 12.7562 6.02176 12.5907 5.94631 12.4085C5.87086 12.2264 5.83203 12.0311 5.83203 11.834V2.16865V2.16841C5.83189 1.97124 5.87062 1.77598 5.946 1.5938C6.02139 1.41161 6.13195 1.24608 6.27137 1.10666C6.41079 0.96724 6.57632 0.856676 6.75851 0.78129C6.9407 0.705904 7.13596 0.667175 7.33312 0.667318L7.33361 0.667318C7.53077 0.667175 7.72603 0.705904 7.90822 0.78129C8.0904 0.856676 8.25594 0.96724 8.39536 1.10666C8.53478 1.24608 8.64534 1.41161 8.72073 1.5938C8.79611 1.77598 8.83484 1.97124 8.8347 2.16841ZM13.5014 5.50174V5.50199V11.834C13.5014 12.2322 13.3432 12.614 13.0616 12.8956C12.7801 13.1771 12.3982 13.3353 12 13.3353C11.6019 13.3353 11.22 13.1771 10.9384 12.8956C10.6569 12.614 10.4987 12.2322 10.4987 11.834V5.50199V5.50174C10.4986 5.30458 10.5373 5.10932 10.6127 4.92713C10.6881 4.74495 10.7986 4.57941 10.938 4.43999C11.0775 4.30057 11.243 4.19001 11.4252 4.11462C11.6074 4.03924 11.8026 4.00051 11.9998 4.00065L12.0003 4.00065C12.1974 4.00051 12.3927 4.03924 12.5749 4.11462C12.7571 4.19001 12.9226 4.30057 13.062 4.43999C13.2014 4.57941 13.312 4.74495 13.3874 4.92713C13.4628 5.10932 13.5015 5.30458 13.5014 5.50174ZM4.16803 8.83508V8.83532V11.834C4.16803 12.2322 4.00986 12.614 3.7283 12.8956C3.44675 13.1771 3.06488 13.3353 2.6667 13.3353C2.26852 13.3353 1.88665 13.1771 1.6051 12.8956C1.32354 12.614 1.16537 12.2322 1.16537 11.834L1.16537 8.83532L1.16536 8.83508C1.16522 8.63791 1.20395 8.44265 1.27934 8.26046C1.35472 8.07828 1.46529 7.91274 1.6047 7.77332C1.74412 7.63391 1.90966 7.52334 2.09184 7.44796C2.27403 7.37257 2.46929 7.33384 2.66646 7.33399H2.66694C2.86411 7.33384 3.05937 7.37257 3.24155 7.44796C3.42374 7.52334 3.58927 7.63391 3.72869 7.77332C3.86811 7.91274 3.97867 8.07828 4.05406 8.26046C4.12945 8.44265 4.16818 8.63791 4.16803 8.83508ZM2.21972 12.9131L2.34729 12.6051L2.21973 12.9131C2.36143 12.9718 2.51331 13.002 2.6667 13.002C2.82008 13.002 2.97197 12.9718 3.11367 12.9131C3.25538 12.8544 3.38414 12.7683 3.4926 12.6599C3.60106 12.5514 3.68709 12.4227 3.74579 12.281C3.80449 12.1393 3.8347 11.9874 3.8347 11.834V8.83532C3.8347 8.18989 3.31213 7.66732 2.6667 7.66732C2.02127 7.66732 1.4987 8.18989 1.4987 8.83532V11.834C1.4987 11.9874 1.52891 12.1393 1.58761 12.281C1.6463 12.4227 1.73234 12.5514 1.8408 12.6599C1.94926 12.7683 2.07802 12.8544 2.21972 12.9131ZM13.8347 5.50199V11.834C13.8347 12.3206 13.6414 12.7872 13.2973 13.1313C12.9533 13.4754 12.4866 13.6687 12 13.6687C11.5134 13.6687 11.0468 13.4754 10.7027 13.1313C10.3587 12.7872 10.1654 12.3206 10.1654 11.834V5.50199C10.1652 5.261 10.2125 5.02235 10.3047 4.79968C10.3968 4.57701 10.5319 4.37469 10.7023 4.20429C10.8727 4.03389 11.0751 3.89876 11.2977 3.80662C11.5204 3.71448 11.7591 3.66714 12 3.66732L13.8347 5.50199ZM7.33336 1.00065C6.68794 1.00065 6.16536 1.52322 6.16536 2.16865V11.834C6.16536 12.1438 6.28842 12.4408 6.50746 12.6599C6.72651 12.8789 7.02359 13.002 7.33336 13.002C7.64314 13.002 7.94022 12.8789 8.15927 12.6599C8.37831 12.4408 8.50136 12.1438 8.50136 11.834V2.16865C8.50136 1.52322 7.97879 1.00065 7.33336 1.00065ZM12 4.33398C11.3554 4.33398 10.832 4.85638 10.832 5.50199V11.834C10.832 12.1438 10.9551 12.4408 11.1741 12.6599C11.3932 12.8789 11.6903 13.002 12 13.002C12.3098 13.002 12.6069 12.8789 12.8259 12.6599C13.045 12.4408 13.168 12.1438 13.168 11.834V5.50199C13.168 4.85656 12.6455 4.33398 12 4.33398Z"
        fill="#E6E6E6"
        stroke="#E6E6E6"
        strokeWidth="0.666667"
      />
    </svg>
  )

  const eventIcon = (
    <svg
      viewBox="0 0 17 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[17px] h-4"
    >
      <path
        d="M5.83203 1.33301V3.33301"
        stroke="#E6E6E6"
        strokeMiterlimit="10"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M11.168 1.33301V3.33301"
        stroke="#E6E6E6"
        strokeMiterlimit="10"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M2.83203 6.05957H14.1654"
        stroke="#E6E6E6"
        strokeMiterlimit="10"
        stroke-minecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M14.5 5.66634V11.333C14.5 13.333 13.5 14.6663 11.1667 14.6663H5.83333C3.5 14.6663 2.5 13.333 2.5 11.333V5.66634C2.5 3.66634 3.5 2.33301 5.83333 2.33301H11.1667C13.5 2.33301 14.5 3.66634 14.5 5.66634Z"
        stroke="#E6E6E6"
        strokeMiterlimit="10"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M10.9625 9.13314H10.9685"
        stroke="#E6E6E6"
        strokeWidth="1.33333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M10.9625 11.1331H10.9685"
        stroke="#E6E6E6"
        strokeWidth="1.33333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8.49764 9.13314H8.50363"
        stroke="#E6E6E6"
        strokeWidth="1.33333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8.49764 11.1331H8.50363"
        stroke="#E6E6E6"
        strokeWidth="1.33333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.02889 9.13314H6.03488"
        stroke="#E6E6E6"
        strokeWidth="1.33333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.02889 11.1331H6.03488"
        stroke="#E6E6E6"
        strokeWidth="1.33333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )

  const microphoneIcon = (
    <svg
      viewBox="0 0 17 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[17px] h-[16px]"
    >
      <path
        d="M8.4987 10.833C6.75203 10.833 5.33203 9.41301 5.33203 7.66634V3.99967C5.33203 2.25301 6.75203 0.833008 8.4987 0.833008C10.2454 0.833008 11.6654 2.25301 11.6654 3.99967V7.66634C11.6654 9.41301 10.2454 10.833 8.4987 10.833ZM8.4987 1.83301C7.30536 1.83301 6.33203 2.80634 6.33203 3.99967V7.66634C6.33203 8.85967 7.30536 9.83301 8.4987 9.83301C9.69203 9.83301 10.6654 8.85967 10.6654 7.66634V3.99967C10.6654 2.80634 9.69203 1.83301 8.4987 1.83301Z"
        fill="#E6E6E6"
      />
      <path
        d="M8.50234 13.1669C5.41568 13.1669 2.90234 10.6536 2.90234 7.56693V6.43359C2.90234 6.16026 3.12901 5.93359 3.40234 5.93359C3.67568 5.93359 3.90234 6.16026 3.90234 6.43359V7.56693C3.90234 10.1003 5.96901 12.1669 8.50234 12.1669C11.0357 12.1669 13.1023 10.1003 13.1023 7.56693V6.43359C13.1023 6.16026 13.329 5.93359 13.6023 5.93359C13.8757 5.93359 14.1023 6.16026 14.1023 6.43359V7.56693C14.1023 10.6536 11.589 13.1669 8.50234 13.1669Z"
        fill="#E6E6E6"
      />
      <path
        d="M9.42789 4.78655C9.37455 4.78655 9.31455 4.77988 9.25455 4.75988C8.76789 4.57988 8.23455 4.57988 7.74789 4.75988C7.48789 4.85322 7.20122 4.71988 7.10789 4.45988C7.01455 4.19988 7.14789 3.91322 7.40789 3.81988C8.11455 3.56655 8.89455 3.56655 9.60122 3.81988C9.86122 3.91322 9.99455 4.19988 9.90122 4.45988C9.82122 4.65988 9.62789 4.78655 9.42789 4.78655Z"
        fill="#E6E6E6"
      />
      <path
        d="M9.03208 6.19988C8.98542 6.19988 8.94542 6.19322 8.89875 6.17988C8.63208 6.10655 8.35875 6.10655 8.09208 6.17988C7.82542 6.25322 7.55208 6.09322 7.47875 5.82655C7.40542 5.56655 7.56542 5.29322 7.83208 5.21988C8.26542 5.09988 8.73208 5.09988 9.16542 5.21988C9.43208 5.29322 9.59208 5.56655 9.51875 5.83322C9.45875 6.05322 9.25208 6.19988 9.03208 6.19988Z"
        fill="#E6E6E6"
      />
      <path
        d="M8.5 15.167C8.22667 15.167 8 14.9403 8 14.667V12.667C8 12.3937 8.22667 12.167 8.5 12.167C8.77333 12.167 9 12.3937 9 12.667V14.667C9 14.9403 8.77333 15.167 8.5 15.167Z"
        fill="#E6E6E6"
      />
    </svg>
  )

  interface Tag {
    icon: ReactElement
    text: string
    isActive: boolean
  }

  const [tags, setTags] = useState<Tag[]>([
    { icon: nftIcon, text: 'NFT', isActive: false },
    { icon: galleryIcon, text: 'Media', isActive: false },
    { icon: pollIcon, text: 'Poll', isActive: false },
    { icon: eventIcon, text: 'Event', isActive: false },
    { icon: microphoneIcon, text: 'Record', isActive: false },
  ])

  const [disabledBtn, setDisabledBtn] = useState<boolean>(true)

  const handleClick = (index: number) => {
    const updatedList = tags.map((tag, i) => ({
      ...tag,
      isActive: i === index ? !tag.isActive : false,
    }))

    setTags(updatedList)
  }

  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {
    if (e.target.value === '') {
      setDisabledBtn(true)
    } else {
      setDisabledBtn(false)
    }
  }

  return (
    <section className="w-full flex items-center px-[10px] py-[25px] border-b border-[#1A1A1A]">
      <div className="w-full flex flex-col h-fit bg-[#18181C] rounded-[20px] px-[23px] py-6 gap-5">
        <div className="flex items-center gap-2">
          <Image
            src="/assets/images/timeline/Shape.png"
            alt="User Display Picture"
            width={40}
            height={40}
          />

          <div className="flex flex-col">
            <p className="flex gap-1 items-center text-base font-semibold leading-5 text-white">
              displayname
              {verifyIcon}
            </p>
            <p className="text-xs leading-5 font-medium text-[#B3B3B3]">
              @username
            </p>
          </div>
        </div>

        <Textarea
          className="min-h-[65px] border-none outline-none rounded-[10px] bg-[#232227] text-sm text-[#B3B3B3] ring-offset-0 placeholder:text-[#b3b3b3] focus-visible:ring-0"
          placeholder="Type your message here."
          onChange={handleChange}
        />

        <div className="flex pt-5 border-t border-[#353538] w-full items-center justify-between">
          <div className="flex items-center gap-3">
            {tags.map((tag, index) => (
              <Button
                variant="outline"
                className={`flex items-center px-4 py-3 font-semibold gap-[6px] rounded-[400px] text-xs text-[#E6E6E6] border-[#353538] hover:bg-[#cff07333] hover:text-[#E6E6E6] ${tag.isActive ? 'bg-[#cff07366]' : 'bg-[#232227]'}`}
                key={index}
                onClick={() => handleClick(index)}
              >
                {tag.icon}
                {tag.text}
              </Button>
            ))}
          </div>

          <Button
            variant="secondary"
            disabled={disabledBtn}
            className="px-4 py-3 font-semibold text-xs rounded-[400px] bg-[#cff07366] text-[#E6E6E6] hover:bg-[#cff07333] aria-disabled:true"
          >
            Publish Post
          </Button>
        </div>
      </div>
    </section>
  )
}
