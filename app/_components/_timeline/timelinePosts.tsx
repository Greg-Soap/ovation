import Image from 'next/image'
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from '@/components/ui/popover'
import { Button } from '@/components/ui/button'
import { ReactElement } from 'react'
import React, { useState } from 'react'

export default function TimelinePosts() {
  const verifyIcon = (
    <svg
      viewBox="0 0 13 13"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-3 h-3"
    >
      <path
        d="M11.2814 5.87027L10.6014 5.08027C10.4714 4.93027 10.3664 4.65027 10.3664 4.45027V3.60027C10.3664 3.07027 9.93141 2.63527 9.4014 2.63527H8.55141C8.35641 2.63527 8.07141 2.53027 7.92141 2.40027L7.13141 1.72027C6.78641 1.42527 6.22141 1.42527 5.87141 1.72027L5.08641 2.40527C4.93641 2.53027 4.65141 2.63527 4.45641 2.63527H3.59141C3.06141 2.63527 2.62641 3.07027 2.62641 3.60027V4.45527C2.62641 4.65027 2.52141 4.93027 2.39641 5.08027L1.72141 5.87527C1.43141 6.22027 1.43141 6.78027 1.72141 7.12527L2.39641 7.92027C2.52141 8.07027 2.62641 8.35027 2.62641 8.54527V9.40027C2.62641 9.93027 3.06141 10.3653 3.59141 10.3653H4.45641C4.65141 10.3653 4.93641 10.4703 5.08641 10.6003L5.87641 11.2803C6.22141 11.5753 6.78641 11.5753 7.13641 11.2803L7.92641 10.6003C8.07641 10.4703 8.35641 10.3653 8.55641 10.3653H9.4064C9.93641 10.3653 10.3714 9.93027 10.3714 9.40027V8.55027C10.3714 8.35527 10.4764 8.07027 10.6064 7.92027L11.2864 7.13027C11.5764 6.78527 11.5764 6.21527 11.2814 5.87027ZM8.58141 5.55527L6.16641 7.97027C6.09641 8.04027 6.00141 8.08027 5.90141 8.08027C5.80141 8.08027 5.70641 8.04027 5.63641 7.97027L4.42641 6.76027C4.28141 6.61527 4.28141 6.37527 4.42641 6.23027C4.57141 6.08527 4.81141 6.08527 4.95641 6.23027L5.90141 7.17527L8.05141 5.02527C8.19641 4.88027 8.43641 4.88027 8.58141 5.02527C8.72641 5.17027 8.72641 5.41027 8.58141 5.55527Z"
        fill="#4865FC"
      />
    </svg>
  )

  const moreIcon = (
    <svg
      viewBox="0 0 18 5"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-6 h-1"
    >
      <path
        d="M2 0.714844C0.9 0.714844 0 1.61484 0 2.71484C0 3.81484 0.9 4.71484 2 4.71484C3.1 4.71484 4 3.81484 4 2.71484C4 1.61484 3.1 0.714844 2 0.714844Z"
        fill="#B3B3B3"
      />
      <path
        d="M16 0.714844C14.9 0.714844 14 1.61484 14 2.71484C14 3.81484 14.9 4.71484 16 4.71484C17.1 4.71484 18 3.81484 18 2.71484C18 1.61484 17.1 0.714844 16 0.714844Z"
        fill="#B3B3B3"
      />
      <path
        d="M9 0.714844C7.9 0.714844 7 1.61484 7 2.71484C7 3.81484 7.9 4.71484 9 4.71484C10.1 4.71484 11 3.81484 11 2.71484C11 1.61484 10.1 0.714844 9 0.714844Z"
        fill="#B3B3B3"
      />
    </svg>
  )

  const pinIcon = (
    <svg
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[22px] h-[22px] fill-white"
    >
      <path
        d="M19.6556 9.15063L20.625 8.18125L13.75 1.375L12.8494 2.35125L13.6606 3.1625L5.76125 9.845L4.57875 8.66937L3.60938 9.625L7.50062 13.53L1.375 19.6488L2.34438 20.625L8.47 14.4994L12.375 18.3906L13.3306 17.4144L12.155 16.2388L18.8375 8.33938L19.6556 9.15063ZM11.1788 15.2625L6.7375 10.8212L14.6369 4.125L17.875 7.36312L11.1788 15.2625Z"
        fill=""
      />
    </svg>
  )

  const copyIcon = (
    <svg
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[22px] h-[22px] fill-white"
    >
      <path
        d="M10.1737 20.8543H6.3237C2.73953 20.8543 1.14453 19.2593 1.14453 15.6752V11.8252C1.14453 8.241 2.73953 6.646 6.3237 6.646H10.1737C13.7579 6.646 15.3529 8.241 15.3529 11.8252V15.6752C15.3529 19.2593 13.7579 20.8543 10.1737 20.8543ZM6.3237 8.021C3.48203 8.021 2.51953 8.9835 2.51953 11.8252V15.6752C2.51953 18.5168 3.48203 19.4793 6.3237 19.4793H10.1737C13.0154 19.4793 13.9779 18.5168 13.9779 15.6752V11.8252C13.9779 8.9835 13.0154 8.021 10.1737 8.021H6.3237Z"
        fill=""
      />
      <path
        d="M15.6737 15.3543H14.6654C14.2895 15.3543 13.9779 15.0427 13.9779 14.6668V11.8252C13.9779 8.98349 13.0154 8.021 10.1737 8.021H7.33203C6.9562 8.021 6.64453 7.70933 6.64453 7.3335V6.32516C6.64453 2.741 8.23953 1.146 11.8237 1.146H15.6737C19.2579 1.146 20.8529 2.741 20.8529 6.32516V10.1752C20.8529 13.7593 19.2579 15.3543 15.6737 15.3543ZM15.3529 13.9793H15.6737C18.5154 13.9793 19.4779 13.0168 19.4779 10.1752V6.32516C19.4779 3.4835 18.5154 2.521 15.6737 2.521H11.8237C8.98203 2.521 8.01953 3.4835 8.01953 6.32516V6.646H10.1737C13.7579 6.646 15.3529 8.24099 15.3529 11.8252V13.9793Z"
        fill=""
      />
    </svg>
  )

  const muteIcon = (
    <svg
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[22px] h-[22px] fill-white"
    >
      <path
        d="M10.1737 20.8543H6.3237C2.73953 20.8543 1.14453 19.2593 1.14453 15.6752V11.8252C1.14453 8.241 2.73953 6.646 6.3237 6.646H10.1737C13.7579 6.646 15.3529 8.241 15.3529 11.8252V15.6752C15.3529 19.2593 13.7579 20.8543 10.1737 20.8543ZM6.3237 8.021C3.48203 8.021 2.51953 8.9835 2.51953 11.8252V15.6752C2.51953 18.5168 3.48203 19.4793 6.3237 19.4793H10.1737C13.0154 19.4793 13.9779 18.5168 13.9779 15.6752V11.8252C13.9779 8.9835 13.0154 8.021 10.1737 8.021H6.3237Z"
        fill=""
      />
      <path
        d="M15.6737 15.3543H14.6654C14.2895 15.3543 13.9779 15.0427 13.9779 14.6668V11.8252C13.9779 8.98349 13.0154 8.021 10.1737 8.021H7.33203C6.9562 8.021 6.64453 7.70933 6.64453 7.3335V6.32516C6.64453 2.741 8.23953 1.146 11.8237 1.146H15.6737C19.2579 1.146 20.8529 2.741 20.8529 6.32516V10.1752C20.8529 13.7593 19.2579 15.3543 15.6737 15.3543ZM15.3529 13.9793H15.6737C18.5154 13.9793 19.4779 13.0168 19.4779 10.1752V6.32516C19.4779 3.4835 18.5154 2.521 15.6737 2.521H11.8237C8.98203 2.521 8.01953 3.4835 8.01953 6.32516V6.646H10.1737C13.7579 6.646 15.3529 8.24099 15.3529 11.8252V13.9793Z"
        fill=""
      />
    </svg>
  )

  const shareIcon = (
    <svg
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[22px] h-[22px] fill-white stroke-whites"
    >
      <path
        d="M15.5469 5.65576C17.3802 6.92993 18.6452 8.95576 18.9019 11.2933L15.5469 5.65576Z"
        fill=""
      />
      <path
        d="M15.5469 5.65576C17.3802 6.92993 18.6452 8.95576 18.9019 11.2933"
        stroke=""
        strokeWidth="1.375"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M3.19922 11.3392C3.43755 9.01083 4.68422 6.98499 6.49922 5.70166L3.19922 11.3392Z"
        fill=""
      />
      <path
        d="M3.19922 11.3392C3.43755 9.01083 4.68422 6.98499 6.49922 5.70166"
        stroke=""
        strokeWidth="1.375"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M7.50781 19.1948C8.57115 19.7357 9.78115 20.0382 11.0553 20.0382C12.2836 20.0382 13.4386 19.7632 14.4745 19.259"
        stroke=""
        stroke-width="1.375"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M11.0561 7.05809C12.4636 7.05809 13.6045 5.91716 13.6045 4.50976C13.6045 3.10235 12.4636 1.96143 11.0561 1.96143C9.64874 1.96143 8.50781 3.10235 8.50781 4.50976C8.50781 5.91716 9.64874 7.05809 11.0561 7.05809Z"
        stroke=""
        strokeWidth="1.375"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M4.42724 18.2602C5.83465 18.2602 6.97557 17.1193 6.97557 15.7119C6.97557 14.3045 5.83465 13.1636 4.42724 13.1636C3.01983 13.1636 1.87891 14.3045 1.87891 15.7119C1.87891 17.1193 3.01983 18.2602 4.42724 18.2602Z"
        stroke=""
        stroke-width="1.375"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M17.5718 18.2602C18.9792 18.2602 20.1201 17.1193 20.1201 15.7119C20.1201 14.3045 18.9792 13.1636 17.5718 13.1636C16.1644 13.1636 15.0234 14.3045 15.0234 15.7119C15.0234 17.1193 16.1644 18.2602 17.5718 18.2602Z"
        stroke=""
        strokeWidth="1.375"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )

  const deleteIcon = (
    <svg
      width="22"
      height="22"
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[22px] h-[22px] fill-[#FF0000] stroke-[#FF0000]"
    >
      <path
        d="M2.72054 5.25011L2.72076 5.25009L4.59076 5.06676L4.59232 5.0666C9.42737 4.57582 14.3351 4.76585 19.2688 5.25008L19.269 5.25011C19.3893 5.26184 19.484 5.37354 19.4715 5.5011L19.4714 5.50109L19.4707 5.51046C19.4623 5.62042 19.3671 5.71061 19.2494 5.71061H19.2493H19.2492H19.249H19.2489H19.2488H19.2487H19.2486H19.2485H19.2484H19.2483H19.2482H19.2481H19.248H19.2478H19.2477H19.2476H19.2475H19.2474H19.2473H19.2472H19.2471H19.247H19.2468H19.2467H19.2466H19.2465H19.2464H19.2463H19.2462H19.2461H19.2459H19.2458H19.2457H19.2456H19.2455H19.2454H19.2453H19.2451H19.245H19.2449H19.2448H19.2447H19.2446H19.2444H19.2443H19.2442H19.2441H19.244H19.2439H19.2437H19.2436H19.2435H19.2434H19.2433H19.2432H19.243H19.2429H19.2428H19.2427H19.2426H19.2424H19.2423H19.2422H19.2421H19.242H19.2418H19.2417H19.2416H19.2415H19.2414H19.2412H19.2411H19.241H19.2409H19.2408H19.2406H19.2405H19.2404H19.2403H19.2401H19.24H19.2399H19.2398H19.2396H19.2395H19.2394H19.2393H19.2392H19.239H19.2389H19.2388H19.2387H19.2385H19.2384H19.2383H19.2382H19.238H19.2379H19.2378H19.2376H19.2375H19.2374H19.2373H19.2371H19.237H19.2369H19.2368H19.2366H19.2365H19.2364H19.2362H19.2361H19.236H19.2359H19.2357H19.2356H19.2355H19.2353H19.2352H19.2351H19.235H19.2348H19.2347H19.2346H19.2344H19.2343H19.2342H19.234H19.2339H19.2338H19.2337H19.2335H19.2334H19.2333H19.2331H19.233H19.2329H19.2327H19.2326H19.2325H19.2323H19.2322H19.2321H19.2319H19.2318H19.2317H19.2315H19.2314H19.2313H19.2311H19.231H19.2309H19.2307H19.2306H19.2305H19.2303H19.2302H19.23H19.2299H19.2298H19.2296H19.2295H19.2294H19.2292H19.2291H19.229H19.2288H19.2287H19.2285H19.2284H19.2283H19.2281H19.228H19.2279H19.2277H19.2276H19.2274H19.2273H19.2272H19.227H19.2269H19.2268H19.2266H19.2265H19.2263H19.2262H19.2261H19.2259H19.2258H19.2256H19.2255H19.2254H19.2252H19.2251H19.2249H19.2248H19.2247H19.2245H19.2244H19.2242H19.2241H19.224H19.2238H19.2237H19.2235H19.2234H19.2232H19.2231H19.223H19.2228H19.2227H19.2225H19.2224H19.2222H19.2221H19.222H19.2218H19.2217H19.2215H19.2214H19.2212H19.2211H19.221H19.2208H19.2207H19.2205H19.2204H19.2202H19.2201H19.2199H19.2198H19.2197H19.2195H19.2194H19.2192H19.2191H19.2189H19.2188H19.2186H19.2185H19.2183H19.2182H19.2181H19.2179H19.2178H19.2176H19.2175H19.2173H19.2172H19.217H19.2169H19.2167H19.2166H19.2164H19.2163H19.2161H19.216H19.2158H19.2157H19.2155H19.2154H19.2153H19.2151H19.215H19.2148H19.2147H19.2145H19.2144H19.2142H19.2141H19.2139H19.2138H19.2136H19.2135H19.2133H19.2132H19.213H19.2129H19.2127H19.2126H19.2124H19.2123H19.2121H19.212H19.2118H19.2117H19.2115H19.2114H19.2112H19.2111H19.2109H19.2108H19.2106H19.2105H19.2103H19.2102H19.21H19.2099H19.2097H19.2095H19.2094H19.2092H19.2091H19.2089H19.2088H19.2086H19.2085H19.2083H19.2082H19.208H19.2079H19.2077H19.2076H19.2074H19.2073H19.2071H19.207H19.2068H19.2066H19.2065H19.2063H19.2062H19.206H19.2059H19.2057H19.2056H19.2054H19.2053H19.2051H19.205H19.2048H19.2046H19.2045H19.2043H19.2042H19.204H19.2039H19.2037H19.2036H19.2034H19.2032H19.2031H19.2029H19.2028H19.2026H19.2025H19.2023H19.2022H19.202H19.2019H19.2017H19.2015H19.2014H19.2012H19.2011H19.2009H19.2008H19.2006H19.2004H19.2003H19.2001H19.2H19.1998H19.1997H19.1995H19.1994H19.1992H19.199H19.1989C14.3401 5.22476 9.47495 5.04037 4.64725 5.52953C4.647 5.52956 4.64675 5.52958 4.6465 5.52961L2.77925 5.71267C2.77909 5.71269 2.77893 5.7127 2.77876 5.71272C2.64113 5.72558 2.53034 5.63019 2.51814 5.50215C2.50533 5.36765 2.59732 5.26213 2.72054 5.25011Z"
        fill=""
        stroke=""
        strokeWidth="0.916667"
      />
      <path
        d="M7.76442 4.78481C7.76441 4.78481 7.7644 4.78481 7.76439 4.78481L7.7644 4.78477L7.75349 4.78286C7.63054 4.76134 7.54723 4.63674 7.56679 4.525L7.56732 4.5219L7.76899 3.32107L7.76908 3.32051C7.84552 2.86187 7.92139 2.46034 8.16939 2.15393C8.39187 1.87906 8.82364 1.60433 9.80115 1.60433H12.2028C13.1801 1.60433 13.6147 1.88749 13.8391 2.1694C14.0891 2.48329 14.1631 2.88913 14.2346 3.32808L14.2346 3.32808L14.2351 3.33081L14.4367 4.52247L14.4369 4.52313C14.4589 4.6525 14.3676 4.76514 14.2615 4.78107L14.2615 4.78097L14.2523 4.78253C14.123 4.80462 14.0103 4.71333 13.9944 4.60717L13.9945 4.60716L13.9931 4.59869L13.7917 3.40882L13.7896 3.39556C13.7598 3.21061 13.7303 3.02729 13.6869 2.8735C13.6407 2.71008 13.5653 2.5269 13.4094 2.37718C13.251 2.22505 13.0581 2.15359 12.8663 2.11683C12.6803 2.08117 12.4602 2.07183 12.212 2.07183H9.81032C9.5647 2.07183 9.34689 2.07933 9.16396 2.11159C8.97589 2.14476 8.78143 2.2111 8.62055 2.36169C8.46184 2.51024 8.3861 2.69425 8.33968 2.85664C8.29673 3.00688 8.26627 3.18783 8.23513 3.37277C8.23381 3.38061 8.23249 3.38847 8.23117 3.39632L8.02066 4.58615L8.02061 4.58614L8.01956 4.59263C8.00139 4.70469 7.90414 4.78516 7.79365 4.78516L7.77306 4.78507L7.76442 4.78481Z"
        fill=""
        stroke=""
        strokeWidth="0.916667"
      />
      <path
        d="M4.49042 8.39459L4.49044 8.39459L4.49015 8.39067C4.4818 8.2766 4.57433 8.16087 4.70251 8.14837C4.83941 8.14478 4.94117 8.24273 4.95082 8.36445L5.54648 17.5928L5.54673 17.5964L5.54836 17.6189C5.5723 17.9498 5.59518 18.2663 5.6479 18.5378C5.70276 18.8204 5.79824 19.1043 6.00192 19.342C6.41291 19.8215 7.10839 19.9374 8.0572 19.9374H13.9422C14.8947 19.9374 15.5931 19.8218 16.0044 19.342C16.2086 19.1037 16.3034 18.8189 16.3571 18.5358C16.4089 18.2621 16.4299 17.9433 16.4518 17.61L16.4529 17.5934L16.4529 17.5928L17.0486 8.36449C17.058 8.24595 17.1656 8.14487 17.2968 8.14836C17.4282 8.16083 17.5178 8.2709 17.5092 8.39146L17.509 8.39459L16.9133 17.6227C16.9133 17.6231 16.9133 17.6236 16.9132 17.624C16.861 18.3654 16.8016 19.0266 16.4456 19.524C16.1195 19.9794 15.4603 20.3958 13.9422 20.3958H8.0572C6.53908 20.3958 5.87989 19.9794 5.55384 19.524C5.19777 19.0266 5.13845 18.3654 5.08616 17.6241C5.08613 17.6236 5.0861 17.6232 5.08607 17.6227L4.49042 8.39459Z"
        fill=""
        stroke=""
        strokeWidth="0.916667"
      />
      <path
        d="M12.5212 15.3542H9.46875C9.34605 15.3542 9.23958 15.2477 9.23958 15.125C9.23958 15.0023 9.34605 14.8958 9.46875 14.8958H12.5212C12.644 14.8958 12.7504 15.0023 12.7504 15.125C12.7504 15.2477 12.644 15.3542 12.5212 15.3542Z"
        fill=""
        stroke=""
        strokeWidth="0.916667"
      />
      <path
        d="M13.2904 11.6877H8.70703C8.58433 11.6877 8.47786 11.5812 8.47786 11.4585C8.47786 11.3358 8.58433 11.2293 8.70703 11.2293H13.2904C13.4131 11.2293 13.5195 11.3358 13.5195 11.4585C13.5195 11.5812 13.4131 11.6877 13.2904 11.6877Z"
        fill=""
        stroke=""
        strokeWidth="0.916667"
      />
    </svg>
  )

  const likeIcon = (
    <svg
      viewBox="0 0 17 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[17px] h-4"
    >
      <path
        d="M8.91203 13.8731C8.68536 13.9531 8.31203 13.9531 8.08536 13.8731C6.15203 13.2131 1.83203 10.4597 1.83203 5.79307C1.83203 3.73307 3.49203 2.06641 5.5387 2.06641C6.75203 2.06641 7.82536 2.65307 8.4987 3.55974C9.17203 2.65307 10.252 2.06641 11.4587 2.06641C13.5054 2.06641 15.1654 3.73307 15.1654 5.79307C15.1654 10.4597 10.8454 13.2131 8.91203 13.8731Z"
        stroke=""
        strokeWidth="0.967708"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )

  const messageIcon = (
    <svg
      viewBox="0 0 17 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[17px] h-4"
    >
      <path
        d="M6.16536 12.6663H5.83203C3.16536 12.6663 1.83203 11.9997 1.83203 8.66634V5.33301C1.83203 2.66634 3.16536 1.33301 5.83203 1.33301H11.1654C13.832 1.33301 15.1654 2.66634 15.1654 5.33301V8.66634C15.1654 11.333 13.832 12.6663 11.1654 12.6663H10.832C10.6254 12.6663 10.4254 12.7663 10.2987 12.933L9.2987 14.2663C8.8587 14.853 8.1387 14.853 7.6987 14.2663L6.6987 12.933C6.59203 12.7863 6.34536 12.6663 6.16536 12.6663Z"
        stroke=""
        strokeMiterlimit="10"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M5.16797 5.33301H11.8346"
        stroke=""
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M5.16797 8.66699H9.16797"
        stroke=""
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )

  const repostIcon = (
    <svg
      viewBox="0 0 17 16"
      fill=""
      stroke="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[17px] h-4"
    >
      <path
        d="M12.1134 2.93996H4.09339L5.34672 1.68663C5.54005 1.49329 5.54005 1.17329 5.34672 0.979961C5.15339 0.786628 4.83339 0.786628 4.64005 0.979961L2.53339 3.08663C2.48672 3.13329 2.45339 3.18663 2.42672 3.24663C2.40005 3.30663 2.38672 3.37329 2.38672 3.43996C2.38672 3.50663 2.40005 3.57329 2.42672 3.63329C2.45339 3.69329 2.48672 3.74663 2.53339 3.79329L4.64005 5.89996C4.74005 5.99996 4.86672 6.04663 4.99339 6.04663C5.12005 6.04663 5.24672 5.99996 5.34672 5.89996C5.54005 5.70663 5.54005 5.38663 5.34672 5.19329L4.09339 3.93996H12.1134C12.9401 3.93996 13.6134 4.61329 13.6134 5.43996V7.65329C13.6134 7.92663 13.8401 8.15329 14.1134 8.15329C14.3867 8.15329 14.6134 7.92663 14.6134 7.65329V5.43996C14.6134 4.05996 13.4934 2.93996 12.1134 2.93996Z"
        fill=""
      />
      <path
        d="M14.6134 12.56C14.6134 12.4933 14.6001 12.4267 14.5734 12.3667C14.5467 12.3067 14.5134 12.2533 14.4667 12.2067L12.3601 10.1C12.1667 9.90668 11.8467 9.90668 11.6534 10.1C11.4601 10.2933 11.4601 10.6133 11.6534 10.8067L12.9067 12.06H4.88672C4.06005 12.06 3.38672 11.3867 3.38672 10.56V8.34668C3.38672 8.07335 3.16005 7.84668 2.88672 7.84668C2.61339 7.84668 2.38672 8.07335 2.38672 8.34668V10.56C2.38672 11.94 3.50672 13.06 4.88672 13.06H12.9067L11.6534 14.3133C11.4601 14.5067 11.4601 14.8267 11.6534 15.02C11.7534 15.12 11.8801 15.1667 12.0067 15.1667C12.1334 15.1667 12.2601 15.12 12.3601 15.02L14.4667 12.9133C14.5134 12.8667 14.5467 12.8133 14.5734 12.7533C14.6001 12.6933 14.6134 12.6267 14.6134 12.56Z"
        fill=""
      />
    </svg>
  )

  const clapIcon = (
    <svg
      viewBox="0 0 17 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[17px] h-4"
    >
      <path
        d="M4.52668 2.40853C4.55442 2.44566 4.59295 2.47332 4.63701 2.48772C4.68106 2.50213 4.72849 2.50258 4.77281 2.48901C4.81712 2.47544 4.85617 2.44852 4.88461 2.41192C4.91305 2.37532 4.92949 2.33083 4.93168 2.28453L5.00068 1.25003C5.00352 1.21333 4.99745 1.17649 4.98299 1.14265C4.96854 1.1088 4.94612 1.07895 4.91764 1.05562C4.88917 1.0323 4.85548 1.01621 4.81944 1.0087C4.78341 1.0012 4.7461 1.00251 4.71068 1.01253L4.03068 1.22403C3.9955 1.2356 3.96357 1.25535 3.93751 1.28166C3.91145 1.30797 3.89201 1.34009 3.88078 1.37539C3.86956 1.41068 3.86687 1.44813 3.87293 1.48466C3.879 1.52119 3.89365 1.55576 3.91568 1.58553L4.52668 2.40853ZM3.34668 3.21953L2.41668 2.82953C2.38302 2.81585 2.35325 2.79409 2.32998 2.76619C2.30671 2.73828 2.29067 2.70508 2.28326 2.66951C2.27585 2.63394 2.2773 2.5971 2.28749 2.56222C2.29768 2.52735 2.31629 2.49552 2.34168 2.46953L2.82668 1.95453C2.85161 1.92822 2.88253 1.90832 2.9168 1.89653C2.95108 1.88474 2.98769 1.8814 3.02353 1.8868C3.05937 1.8922 3.09338 1.90618 3.12265 1.92755C3.15193 1.94892 3.17561 1.97704 3.19168 2.00953L3.63668 2.91453C3.65593 2.9557 3.66231 3.00171 3.655 3.04656C3.6477 3.09142 3.62704 3.13302 3.59573 3.16596C3.56441 3.19889 3.5239 3.22162 3.47947 3.23118C3.43504 3.24073 3.38877 3.23667 3.34668 3.21953ZM15.4077 5.28803C15.575 5.43278 15.7117 5.60962 15.8095 5.80809C15.9073 6.00657 15.9643 6.22264 15.9772 6.44353V11.166C16.0157 11.91 15.8558 12.6508 15.5139 13.3126C15.1719 13.9744 14.6602 14.5335 14.0312 14.9325C13.4086 15.3044 12.6959 15.4983 11.9707 15.493C11.4838 15.4923 11.0005 15.4102 10.5407 15.25C10.1013 15.4119 9.63689 15.495 9.16868 15.4955C8.51623 15.5015 7.87159 15.3532 7.28733 15.0628C6.70307 14.7723 6.19573 14.3478 5.80668 13.824L4.07118 10.9905L2.82118 8.88053C2.64683 8.54377 2.59361 8.15728 2.67044 7.78593C2.74728 7.41458 2.94951 7.08095 3.24318 6.84103C3.35568 6.76453 3.47518 6.69953 3.60068 6.64653C3.48931 6.32853 3.48262 5.98324 3.58158 5.66116C3.68055 5.33909 3.87997 5.05713 4.15068 4.85653C4.26068 4.78903 4.37568 4.73153 4.49568 4.68503C4.47968 4.55553 4.48068 4.42503 4.49918 4.29553C4.53276 4.06407 4.6175 3.843 4.74723 3.6484C4.87697 3.45379 5.04844 3.29055 5.24918 3.17053C5.5254 3.01608 5.84114 2.94682 6.15664 2.97146C6.47215 2.99611 6.7733 3.11356 7.02218 3.30903C7.10618 3.21953 7.20218 3.14203 7.30668 3.07753C7.62918 2.88428 8.01461 2.82522 8.38018 2.91303C8.59568 2.85542 8.82017 2.8393 9.04168 2.86553C9.32593 2.89624 9.59421 3.01234 9.81118 3.19853C9.89668 3.10753 9.99418 3.02803 10.1007 2.96203C10.4431 2.76032 10.8514 2.70247 11.2364 2.80114C11.6214 2.89982 11.9515 3.14698 12.1547 3.48853L13.1907 5.33853C13.3268 5.19852 13.4893 5.08671 13.6687 5.0095C13.848 4.93228 14.0409 4.89118 14.2362 4.88853C14.6637 4.86525 15.0837 5.00813 15.4077 5.28803ZM9.48368 7.17353H9.48068L9.46218 7.18603L9.47518 7.17803L9.48368 7.17353ZM6.07268 3.97003C5.96819 3.96258 5.86352 3.98203 5.76868 4.02653V4.02453C5.69397 4.06697 5.62989 4.12584 5.5813 4.1967C5.5327 4.26756 5.50086 4.34855 5.48818 4.43353C5.47513 4.53017 5.49579 4.62835 5.54668 4.71153L6.28868 5.83903C6.30405 5.62362 6.36816 5.41452 6.47617 5.22751C6.58418 5.0405 6.73327 4.88048 6.91218 4.75953C6.93618 4.74453 6.96018 4.73403 6.98368 4.72303C6.99968 4.71603 7.01618 4.70803 7.03268 4.69953C6.90334 4.6829 6.78572 4.61609 6.70518 4.51353L6.39568 4.11353C6.38467 4.09929 6.37449 4.08444 6.36518 4.06903C6.27773 4.01161 6.17703 3.97753 6.07268 3.97003ZM4.92868 5.59503C4.8368 5.62144 4.74922 5.66101 4.66868 5.71253L4.67018 5.71053C4.59535 5.80096 4.54621 5.90984 4.52791 6.02578C4.50961 6.14172 4.52283 6.26045 4.56618 6.36953C4.62968 6.49153 4.67668 6.57953 4.71268 6.64753L4.71618 6.65353L5.41868 7.70953C5.47368 7.41903 5.60768 7.14903 5.80568 6.92953L4.92868 5.59503ZM4.92618 10.4775L6.64018 13.2775L6.64168 13.2755C6.94133 13.6703 7.3316 13.9872 7.77953 14.1994C8.22746 14.4116 8.71988 14.5128 9.21518 14.4945C8.97809 14.2939 8.76711 14.0642 8.58718 13.811L6.83418 10.9495L6.09368 9.69953C5.98556 9.75956 5.85888 9.77695 5.73858 9.74826C5.61828 9.71957 5.51308 9.64689 5.44368 9.54453L4.10068 7.53153C3.99267 7.55814 3.89081 7.60534 3.80068 7.67053C3.72195 7.76611 3.66914 7.88034 3.64733 8.00223C3.62553 8.12413 3.63546 8.24959 3.67618 8.36653L4.92618 10.4775ZM11.3112 14.444C12.0637 14.5946 12.8453 14.4657 13.5097 14.0815L13.5112 14.0795C13.9848 13.7748 14.3699 13.3508 14.6276 12.85C14.8854 12.3493 15.0068 11.7896 14.9797 11.227V6.47503C14.9716 6.38918 14.9465 6.3058 14.9058 6.22975C14.8652 6.15369 14.8098 6.08649 14.743 6.03204C14.6761 5.9776 14.5991 5.937 14.5163 5.91262C14.4336 5.88824 14.3469 5.88056 14.2612 5.89003C14.1329 5.89254 14.0099 5.94219 13.9159 6.02952C13.8218 6.11685 13.7632 6.23574 13.7512 6.36353C13.9452 6.71203 14.1062 6.99903 14.1857 7.13653C14.2455 7.2508 14.2588 7.38375 14.2228 7.5076C14.1869 7.63146 14.1045 7.73664 13.9929 7.80118C13.8812 7.86571 13.7489 7.88462 13.6237 7.85394C13.4984 7.82325 13.3899 7.74536 13.3207 7.63653C13.1624 7.35921 13.0059 7.08087 12.8512 6.80153L12.8157 6.73803V6.70803C12.8137 6.70403 12.8107 6.70153 12.8082 6.69803C12.8052 6.69453 12.8017 6.69103 12.7992 6.68653L11.2992 4.00703C11.2604 3.92535 11.1988 3.85664 11.1219 3.80917C11.045 3.76171 10.9559 3.73752 10.8655 3.73953C10.7751 3.74154 10.6873 3.76966 10.6125 3.82049C10.5377 3.87133 10.4793 3.94271 10.4442 4.02603L10.9562 4.84803L11.0117 4.93803C11.3946 5.55682 11.781 6.1735 12.1707 6.78803C12.2396 6.89932 12.2621 7.0332 12.2334 7.16091C12.2047 7.28862 12.127 7.39997 12.0171 7.47106C11.9072 7.54215 11.7738 7.56731 11.6456 7.54113C11.5173 7.51494 11.4044 7.43951 11.3312 7.33103C10.9387 6.71191 10.5492 6.0909 10.1627 5.46803L9.73418 4.78003L9.53118 4.45353L9.52468 4.44353L9.51018 4.41953C9.50818 4.41703 9.50568 4.41553 9.50318 4.41353C9.50026 4.41113 9.49758 4.40845 9.49518 4.40553L9.18268 3.99903C9.17206 3.98463 9.16205 3.96978 9.15268 3.95453C9.08723 3.89464 9.00237 3.86038 8.91368 3.85803C8.7878 3.83688 8.65847 3.85431 8.54268 3.90803C8.4667 3.95135 8.40154 4.01134 8.35209 4.08348C8.30264 4.15563 8.27019 4.23804 8.25718 4.32453C8.24448 4.41708 8.26202 4.51125 8.30718 4.59303C8.53941 4.68523 8.75378 4.81721 8.94068 4.98303C9.09468 5.14003 9.23068 5.31453 9.34568 5.50303C9.48518 5.71353 9.64268 5.97153 9.79868 6.23153C9.91518 6.42653 10.0307 6.62203 10.1382 6.80453L10.1787 6.87303C10.3487 7.15953 10.4927 7.40203 10.5882 7.55003C10.624 7.60515 10.6486 7.66679 10.6606 7.73142C10.6726 7.79606 10.6718 7.86242 10.6581 7.92672C10.6445 7.99103 10.6183 8.05202 10.5811 8.1062C10.5438 8.16039 10.4963 8.20671 10.4412 8.24253C10.3861 8.27835 10.3244 8.30296 10.2598 8.31495C10.1952 8.32695 10.1288 8.3261 10.0645 8.31245C10.0002 8.2988 9.9392 8.27262 9.88501 8.2354C9.83082 8.19818 9.7845 8.15065 9.74868 8.09553C9.63418 7.91853 9.46118 7.62453 9.27468 7.30903L9.20518 7.19103L9.20468 7.19053C9.11818 7.04403 9.02968 6.89403 8.94218 6.74853C8.78818 6.49103 8.63918 6.24853 8.51218 6.05603C8.44654 5.95157 8.37527 5.85076 8.29868 5.75403C8.29289 5.74671 8.28621 5.7397 8.27968 5.73303C8.16965 5.63375 8.0417 5.55637 7.90268 5.50503C7.86561 5.49962 7.82924 5.49023 7.79418 5.47703C7.66518 5.49203 7.54168 5.53953 7.43518 5.61403C7.35831 5.70591 7.30758 5.81678 7.28831 5.93502C7.26904 6.05326 7.28195 6.1745 7.32568 6.28603L7.48418 6.58103C7.69468 6.67053 7.89068 6.79153 8.06518 6.94003C8.19968 7.07153 8.31718 7.21903 8.41518 7.37903C8.52318 7.54403 8.63818 7.73903 8.74968 7.93303C8.81668 8.04953 8.88268 8.16653 8.94618 8.27953L8.94968 8.28553L8.96968 8.32153C9.11618 8.58053 9.24718 8.81203 9.35418 8.97753C9.39139 9.03264 9.41724 9.09461 9.4302 9.15983C9.44317 9.22504 9.443 9.29219 9.4297 9.35734C9.4164 9.42249 9.39023 9.48433 9.35274 9.53925C9.31525 9.59416 9.26719 9.64105 9.21135 9.67716C9.15552 9.71327 9.09305 9.73789 9.02759 9.74956C8.96213 9.76124 8.895 9.75974 8.83012 9.74515C8.76525 9.73057 8.70394 9.70319 8.64977 9.66462C8.59561 9.62605 8.54968 9.57706 8.51468 9.52053C8.35857 9.27087 8.20967 9.01676 8.06818 8.75853C8.0061 8.64829 7.9436 8.53829 7.88068 8.42853C7.78442 8.25746 7.68321 8.08923 7.57718 7.92403C7.53899 7.86623 7.49914 7.80954 7.45768 7.75403C7.43975 7.72975 7.4202 7.7067 7.39918 7.68503C7.2879 7.59296 7.16267 7.5192 7.02818 7.46653C6.99153 7.46044 6.95566 7.45038 6.92118 7.43653C6.78841 7.46063 6.66259 7.51373 6.55268 7.59203C6.47296 7.68946 6.4196 7.80573 6.39771 7.9297C6.37582 8.05368 6.38614 8.18119 6.42768 8.30003L7.68968 10.4335L9.42118 13.2625C9.8866 13.8729 10.5585 14.2928 11.3112 14.4435M2.03518 3.53803L2.90068 4.11903C2.93973 4.14607 2.96965 4.18432 2.98648 4.22874C3.00331 4.27315 3.00626 4.32163 2.99493 4.36776C2.9836 4.41388 2.95853 4.45548 2.92304 4.48705C2.88755 4.51861 2.84331 4.53866 2.79618 4.54453L1.76068 4.67953C1.72337 4.68418 1.68549 4.67969 1.6503 4.66645C1.61511 4.6532 1.58366 4.63161 1.55867 4.60352C1.53368 4.57543 1.51589 4.54168 1.50683 4.50519C1.49777 4.46869 1.49772 4.43055 1.50668 4.39403L1.67768 3.67803C1.68698 3.64169 1.70478 3.60809 1.72963 3.57999C1.75447 3.5519 1.78564 3.53011 1.82056 3.51644C1.85549 3.50276 1.89316 3.49758 1.93048 3.50134C1.96779 3.50509 2.00368 3.51767 2.03518 3.53803Z"
        fill=""
      />
    </svg>
  )

  const playIcon = (
    <svg
      viewBox="0 0 21 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[21px] h-[21px]"
    >
      <path
        d="M10.4688 0C4.94875 0 0.46875 4.48 0.46875 10C0.46875 15.52 4.94875 20 10.4688 20C15.9888 20 20.4688 15.52 20.4688 10C20.4688 4.48 15.9988 0 10.4688 0ZM13.4688 12.23L10.5687 13.9C10.2087 14.11 9.80875 14.21 9.41875 14.21C9.01875 14.21 8.62875 14.11 8.26875 13.9C7.54875 13.48 7.11875 12.74 7.11875 11.9V8.55C7.11875 7.72 7.54875 6.97 8.26875 6.55C8.98875 6.13 9.84875 6.13 10.5787 6.55L13.4787 8.22C14.1987 8.64 14.6287 9.38 14.6287 10.22C14.6287 11.06 14.1987 11.81 13.4688 12.23Z"
        fill="white"
      />
    </svg>
  )

  interface PostMenu {
    icon: ReactElement
    text: string
    isDeleteButton: boolean
  }

  interface PostAction {
    icon: ReactElement
    value: number
    isActive: boolean
  }

  const postMenu: PostMenu[] = [
    { icon: pinIcon, text: 'Pin to profile', isDeleteButton: false },
    { icon: copyIcon, text: 'Copy post link', isDeleteButton: false },
    { icon: muteIcon, text: 'Mute this post', isDeleteButton: false },
    { icon: shareIcon, text: 'Share this post', isDeleteButton: false },
    { icon: deleteIcon, text: 'Delete post', isDeleteButton: true },
  ]

  const [postActions, setPostActions] = useState<PostAction[]>([
    { icon: likeIcon, value: 43, isActive: false },
    { icon: messageIcon, value: 43, isActive: false },
    { icon: repostIcon, value: 43, isActive: false },
    { icon: clapIcon, value: 43, isActive: false },
  ])

  const [isShown, setIsShown] = useState<boolean>(false)

  const posts = [
    {
      id: 1,
      userDisplayPicture: '/assets/images/timeline/Shape.png',
      displayName: 'Trevor Belmont',
      userName: 'trevor12',
      imgSrc: '/assets/images/timeline/_post/post-media.png',
      transcripts: [
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
      ],
      extraTranscripts: [
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
      ],
      eventHeader: '',
      eventImage: '',
      eventDate: '',
      eventLocation: '',
      hasMedia: true,
      hasEvent: false,
      hasVoiceRecord: false,
      isPlainText: false,
    },
    {
      id: 2,
      userDisplayPicture: '/assets/images/timeline/Oval.png',
      displayName: 'Alucard',
      userName: 'alucard12',
      imgSrc: '',
      transcripts: [
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
      ],
      extraTranscripts: [
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
      ],
      eventHeader: 'MINT DAY: Kansas city',
      eventImage: '/assets/images/timeline/_post/image7.png',
      eventDate: 'Wed, 24 Jan, 15:00 - 20:00',
      eventLocation: 'Virtual event',
      hasMedia: false,
      hasEvent: true,
      hasVoiceRecord: false,
      isPlainText: false,
    },
    {
      id: 3,
      userDisplayPicture: '/assets/images/timeline/Oval.png',
      displayName: 'Outcast',
      userName: 'lummie12',
      imgSrc: '',
      transcripts: [
        { time: '00.00', text: 'How are you?' },
        { time: '00.05', text: 'Hope you are good?' },
        { time: '00.09', text: 'Where are you?' },
        { time: '00.15', text: 'Come on in' },
        { time: '00.19', text: 'Everyone is welcomed here' },
      ],
      extraTranscripts: [
        { time: '00:26', text: 'Lorem ipsum', isHidden: isShown },
        { time: '00:30', text: 'Lorem ipsum', isHidden: isShown },
        { time: '00:37', text: 'Lorem ipsum', isHidden: isShown },
        { time: '00:44', text: 'Lorem ipsum', isHidden: isShown },
        { time: '00:56', text: 'Lorem ipsum', isHidden: isShown },
      ],
      eventHeader: '',
      eventImage: '',
      eventDate: '',
      eventLocation: '',
      hasMedia: false,
      hasEvent: false,
      hasVoiceRecord: true,
      isPlainText: false,
    },
    {
      id: 4,
      userDisplayPicture: '/assets/images/timeline/Shape.png',
      displayName: 'Nino Uptown',
      userName: 'sametime',
      imgSrc: '',
      transcripts: [
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
        { time: '', text: '' },
      ],
      extraTranscripts: [
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
        { time: '', text: '', isHidden: isShown },
      ],
      eventHeader: '',
      eventImage: '',
      eventDate: '',
      eventLocation: '',
      hasMedia: false,
      hasEvent: false,
      hasVoiceRecord: false,
      isPlainText: true,
    },
  ]

  const handleClick = (index: number) => {
    const updatedList = postActions.map((action, i) => ({
      ...action,
      isActive: i === index ? !action.isActive : action.isActive,
    }))

    setPostActions(updatedList)
  }

  return (
    <>
      {posts.map((post) => (
        <div
          className="w-full h-fit py-10 px-[10px] flex flex-col items-end gap-2 border-t border-[#1A1A1A]"
          key={post.id}
        >
          <div className="w-full flex h-fit items-center justify-between">
            <div className="flex items-center gap-[10px]">
              <Image
                src={post.userDisplayPicture}
                alt="User Display Picture"
                width={36}
                height={36}
              />

              <div className="flex items-center gap-1">
                <p className="text-base font-semibold text-white mr-2 flex items-center gap-1">
                  {post.displayName}
                  {verifyIcon}
                </p>
                <p className="text-xs font-medium text-[#808080]">
                  {post.userName}
                </p>
                <div className="w-1 h-1 rounded-full bg-[#808080]"></div>
                <p className="text-xs leading-5 font-medium text-[#808080]">
                  2h
                </p>
              </div>
            </div>

            <Popover>
              <PopoverTrigger className="p-1 rounded-full">
                {moreIcon}
              </PopoverTrigger>
              <PopoverContent className="w-fit bg-[#232227] flex flex-col items-start px-2 py-4 border-none">
                {postMenu.map((menu, index) => (
                  <Button
                    variant="default"
                    className={`flex py-[10px] w-full justify-start bg-transparent gap-2 font-medium rounded-none ${menu.isDeleteButton ? 'text-[#FF0000]' : 'text-white'}`}
                    key={index}
                  >
                    {menu.icon}
                    {menu.text}
                  </Button>
                ))}
              </PopoverContent>
            </Popover>
          </div>

          <div
            className={`flex flex-col w-[93.5%] h-fit max-w-[820px] gap-[22px]`}
          >
            <p className="text-sm leading-5 text-[#E6E6E6]">
              Dedicated NFT enthusiast, embracing the
              <span className="text-[#CFF073]"> #digital</span> revolution one
              token at a time. Let's explore the world of blockchain art
              together! #NFTCommunity Let's explore the world of blockchain art
              together! #NFTCommunity Let's explore the world of blockchain art
              together! #NFTCommunity
            </p>

            <div
              className={`${post.hasMedia ? 'flex' : 'hidden'} w-full h-auto rounded-[20px] flex-col`}
            >
              <img
                src={post.imgSrc}
                alt="Post media"
                className="w-full h-auto"
              />
            </div>

            <div
              className={`${post.hasVoiceRecord ? 'flex' : 'hidden'} flex-col w-full h-fit`}
            >
              <div className="flex w-full py-3 px-[17px] rounded-[500px] items-center gap-[6px] bg-[#232227] mb-5">
                <div className="w-fit h-fit rounded-full bg-black">
                  {playIcon}
                </div>
                <img
                  src="/assets/images/timeline/frame121.svg"
                  alt="Recording"
                  className="w-[82%] h-4"
                />
                <p className="text-white text-sm">05:04</p>
                <Button
                  variant="default"
                  className="px-3 py-0 h-[20px] bg-[#111115] rounded-[500px] leading-4 text-xs text-white"
                >
                  1x
                </Button>
              </div>

              <div className="flex flex-col w-full h-fit px-4 gap-3 border-l-[4px] border-[#4D4D4D]">
                {post.transcripts.map((list, index) => (
                  <p
                    className="flex items-center gap-2 text-sm text-[#808080]"
                    key={index}
                  >
                    {list.time} <span className="text-white">{list.text}</span>
                  </p>
                ))}
                {post.extraTranscripts.map((list, index) => (
                  <p
                    className={`${list.isHidden ? 'flex' : 'hidden'} items-center gap-2 text-sm text-[#808080]`}
                    key={index}
                  >
                    {list.time} <span className="text-white">{list.text}</span>
                  </p>
                ))}
                <Button
                  variant="default"
                  className="p-0 w-fit h-fit bg-transparent text-sm text-[#9CBD40] font-normal hover:opacity-80 transition-all duration-300"
                  onClick={() => setIsShown(!isShown)}
                >
                  View transcript
                </Button>
              </div>
            </div>

            <div
              className={`${post.hasEvent ? 'flex' : 'hidden'} flex-col w-full h-fit border border-[#18181C] rounded-lg`}
            >
              <p className="py-5 px-3 text-sm font-semibold text-white bg-[#18181C]">
                {post.eventHeader}
              </p>
              <img
                src={post.eventImage}
                alt="Link Preview"
                className="w-full h-auto"
              />
              <div className="px-3 flex flex-col bg-[#18181C] pt-3 py-1">
                <p className="flex items-center gap-[6px] text-[11px] leading-[15px] text-[#B3B3B3]">
                  <Image
                    src="/assets/images/timeline/_post/calender.png"
                    alt="calender icon"
                    width={12}
                    height={12}
                  />
                  {post.eventDate}
                </p>
                <Button
                  variant="link"
                  className="flex items-center w-fit p-0 leading-[15px] underline gap-[6px] text-[11px] text-[#B3B3B3] bg-transparent font-normal"
                >
                  <Image
                    src="/assets/images/timeline/_post/location.png"
                    alt="calender icon"
                    width={12}
                    height={12}
                  />
                  {post.eventLocation}
                </Button>
              </div>

              <div className="flex w-full items-center justify-end p-3">
                <Button className="text-[10px] leading-3 text-[#111115] py-2 px-[10px] bg-[#CFF073]">
                  Add to calender
                </Button>
              </div>
            </div>

            <div className="w-full flex h-fit gap-3">
              {postActions.map((action, index) => (
                <Button
                  variant="default"
                  className={`flex gap-1 bg-transparent outline-none px-1 py-0 rounded-none text-xs leading-4 ${action.isActive ? 'text-[#cff073cc] fill-[#cff07366] stroke-[#cff07366]' : 'text-[#B3B3B3] fill-[#B3B3B3] stroke-[#B3B3B3]'}`}
                  key={index}
                  onClick={() => handleClick(index)}
                >
                  {action.icon}
                  {action.value}
                </Button>
              ))}
            </div>
          </div>
        </div>
      ))}
    </>
  )
}
